define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-d1adddcb","./Transforms-512eb9c4","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-36d5fdb7","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-ffe136bf","./Plane-63c82d96","./EllipsoidTangentPlane-b47f975e","./EllipsoidRhumbLine-8b165373","./PolygonPipeline-6e06ba60","./EllipsoidGeodesic-75d01b60","./PolylinePipeline-da3cd3d5","./WallGeometryLibrary-90ef86f3"],function(v,e,b,C,H,i,t,A,k,w,P,n,a,r,o,s,l,d,G){"use strict";var L=new C.Cartesian3,x=new C.Cartesian3;function m(e){var i=(e=v.defaultValue(e,v.defaultValue.EMPTY_OBJECT)).positions,t=e.maximumHeights,n=e.minimumHeights,a=v.defaultValue(e.granularity,b.CesiumMath.RADIANS_PER_DEGREE),e=v.defaultValue(e.ellipsoid,C.Ellipsoid.WGS84);this._positions=i,this._minimumHeights=n,this._maximumHeights=t,this._granularity=a,this._ellipsoid=C.Ellipsoid.clone(e),this._workerName="createWallOutlineGeometry";i=1+i.length*C.Cartesian3.packedLength+2;v.defined(n)&&(i+=n.length),v.defined(t)&&(i+=t.length),this.packedLength=i+C.Ellipsoid.packedLength+1}m.pack=function(e,i,t){var n;t=v.defaultValue(t,0);var a=e._positions,r=a.length;for(i[t++]=r,n=0;n<r;++n,t+=C.Cartesian3.packedLength)C.Cartesian3.pack(a[n],i,t);var o=e._minimumHeights,r=v.defined(o)?o.length:0;if(i[t++]=r,v.defined(o))for(n=0;n<r;++n)i[t++]=o[n];var s=e._maximumHeights;if(r=v.defined(s)?s.length:0,i[t++]=r,v.defined(s))for(n=0;n<r;++n)i[t++]=s[n];return C.Ellipsoid.pack(e._ellipsoid,i,t),i[t+=C.Ellipsoid.packedLength]=e._granularity,i};var u=C.Ellipsoid.clone(C.Ellipsoid.UNIT_SPHERE),p={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:u,granularity:void 0};return m.unpack=function(e,i,t){i=v.defaultValue(i,0);for(var n,a,r=e[i++],o=new Array(r),s=0;s<r;++s,i+=C.Cartesian3.packedLength)o[s]=C.Cartesian3.unpack(e,i);if(0<(r=e[i++]))for(n=new Array(r),s=0;s<r;++s)n[s]=e[i++];if(0<(r=e[i++]))for(a=new Array(r),s=0;s<r;++s)a[s]=e[i++];var l=C.Ellipsoid.unpack(e,i,u),d=e[i+=C.Ellipsoid.packedLength];return v.defined(t)?(t._positions=o,t._minimumHeights=n,t._maximumHeights=a,t._ellipsoid=C.Ellipsoid.clone(l,t._ellipsoid),t._granularity=d,t):(p.positions=o,p.minimumHeights=n,p.maximumHeights=a,p.granularity=d,new m(p))},m.fromConstantHeights=function(e){var i=(e=v.defaultValue(e,v.defaultValue.EMPTY_OBJECT)).positions,t=e.minimumHeight,n=e.maximumHeight,a=v.defined(t),r=v.defined(n);if(a||r)for(var o=i.length,s=a?new Array(o):void 0,l=r?new Array(o):void 0,d=0;d<o;++d)a&&(s[d]=t),r&&(l[d]=n);return new m({positions:i,maximumHeights:l,minimumHeights:s,ellipsoid:e.ellipsoid})},m.createGeometry=function(e){var i=e._positions,t=e._minimumHeights,n=e._maximumHeights,a=e._granularity,e=e._ellipsoid,t=G.WallGeometryLibrary.computePositions(e,i,n,t,a,!1);if(v.defined(t)){var r=t.bottomPositions,o=t.topPositions,s=o.length,a=2*s,l=new Float64Array(a),d=0;for(s/=3,h=0;h<s;++h){var m=3*h,u=C.Cartesian3.fromArray(o,m,L),m=C.Cartesian3.fromArray(r,m,x);l[d++]=m.x,l[d++]=m.y,l[d++]=m.z,l[d++]=u.x,l[d++]=u.y,l[d++]=u.z}for(var t=new w.GeometryAttributes({position:new k.GeometryAttribute({componentDatatype:A.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:l})}),p=a/3,a=2*p-4+p,f=P.IndexDatatype.createTypedArray(p,a),c=0,h=0;h<p-2;h+=2){var g=h,y=h+2,E=C.Cartesian3.fromArray(l,3*g,L),_=C.Cartesian3.fromArray(l,3*y,x);C.Cartesian3.equalsEpsilon(E,_,b.CesiumMath.EPSILON10)||(E=h+1,_=h+3,f[c++]=E,f[c++]=g,f[c++]=E,f[c++]=_,f[c++]=g,f[c++]=y)}return f[c++]=p-2,f[c++]=p-1,new k.Geometry({attributes:t,indices:f,primitiveType:k.PrimitiveType.LINES,boundingSphere:new H.BoundingSphere.fromVertices(l)})}},function(e,i){return v.defined(i)&&(e=m.unpack(e,i)),e._ellipsoid=C.Ellipsoid.clone(e._ellipsoid),m.createGeometry(e)}});
